img{
  &.img{
    width: auto;

    &-responsive{
      width: 100%;
    }
  }
}
.wrap-items{
  width: 100%;
  box-sizing: border-box;
  &-row{
    flex-direction: row;
  }
  &-column{
    flex-direction: column;
    &-reverse{
      flex-direction: column-reverse;
    }
  }
  &.center{
    display: flex;
    align-items: center;
    justify-content: center;
    &-vertical{
      display: flex;
      align-items: center;
    }
    &-horizontal{
      display: flex;
      justify-content: center;
    }
  }
}

.margin{
  &-out{
    margin: 0px !important;
    &-top{
      margin-top: 0px !important;
    }
    &-bottom{
      margin-bottom: 0px !important;
    }
    &-left{
      margin-left: 0px !important;
    }
    &-right{
      margin-right: 0px !important;
    }
  }
  &-in{
    @each $medidas, $size in $sizes {
          @if $medidas=="base" {

          }@else{
            &-#{$medidas}{
              margin:$size;
              &-top{
                margin-top: $size !important;
              }
              &-bottom{
                margin-bottom: $size !important;
              }
              &-left{
                margin-left: $size !important;
              }
              &-right{
                margin-right: $size !important;
              }
            }
          }
    }
  }
}
.padding{
  &-out{
    padding: 0px !important;
    &-top{
      padding-top: 0px !important;
    }
    &-bottom{
      padding-bottom: 0px !important;
    }
    &-left{
      padding-left: 0px !important;
    }
    &-right{
      padding-right: 0px !important;
    }
  }
  &-in{
    @each $medidas, $size in $sizes {
          @if $medidas=="base" {

          }@else{
            &-#{$medidas}{
              padding:$size !important;
              &-top{
                padding-top: $size !important;
              }
              &-bottom{
                padding-bottom: $size !important;
              }
              &-left{
                padding-left: $size !important;
              }
              &-right{
                padding-right: $size !important;
              }
            }
          }
    }
  }
}
.border{
  &-rounded{
    border-radius: 10px;
    &-top-right{
      border-top-right-radius:10px;
    }
    &-top-left{
      border-top-left-radius:10px;
    }
    &-bottom-right{
      border-bottom-right-radius:10px;
    }
    &-bottom-left{
      border-bottom-left-radius:10px;
    }
  }
  &-out{
    border-width: 0px;
  }
}
.text{
  &-uppercase{
    text-transform: uppercase;
    &-out{
      text-transform: none;
    }
  }

  &-align{
    &-center{
      text-align: center;
    }
    &-left{
      text-align: left;
    }
    &-right{
      text-align: right;
    }
    &-justify{
      text-align: justify;
    }
  }

  &.oswald{
    font-family: 'oswald' !important;
  }
  &.monserrat{
    font-family: 'Montserrat', sans-serif !important;
  }
  &.bold{
    font-weight: bold;
  }
  &.regular{
    font-weight: normal;
  }
  &.decoration{
    &-none{
        text-decoration: none;
    }

  }
}

.after{
  @each $color_name, $color in $colors {
    @each $color_type, $color_value in $color {
      @if $color_type == "base" {
        &-#{$color_name}:after {
          background: $color_value !important;
        }
      }
      @else if $color_name != "shades" {
        &-#{$color_name}.#{$color_type}:after {
          background: $color_value !important;
        }
      }
      @else if $color_name == "shades" {
        &-#{$color_name}-#{$color_type}:after {
          background: $color_value !important;
        }
      }
    }
  }
}
.before{
  @each $color_name, $color in $colors {
    @each $color_type, $color_value in $color {
      @if $color_type == "base" {
        &-#{$color_name}:before {
          background: $color_value !important;
        }
      }
      @else if $color_name != "shades" {
        &-#{$color_name}.#{$color_type}:before {
          background: $color_value !important;
        }
      }
      @else if $color_name == "shades" {
        &-#{$color_name}-#{$color_type}:before {
          background: $color_value !important;
        }
      }
    }
  }
}

.card{
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
  transition: all 0.3s ease-out;

  p{
    font-size: 18px;
    font-weight: bold;

  }
  &.notification{
    z-index:  1000;
    position: fixed;
    z-index: 10000;
    background-color: #ffffff;
    box-sizing: border-box;
    border: 3px dotted $naranja-diseno;
    width: 300px;
    height:400px;
  }
  &.move{
    top: 40px !important;
    right: 50px !important;
    width: 10px !important;
    height: 10px !important;
    left: initial !important;
    @include  desktop-max{
      right: calc(50% - 760px) !important;
    };
  }
}

//loaders

.loader,
.loader:before,
.loader:after {
  background: #ffffff;
  -webkit-animation: load1 1s infinite ease-in-out;
  animation: load1 1s infinite ease-in-out;
  width: 1em;
  height: 4em;
}
.loader {
  color: #ffffff;
  text-indent: -9999em;
  margin: 88px auto;
  position: relative;
  font-size: 11px;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}
.loader:before,
.loader:after {
  position: absolute;
  top: 0;
  content: '';
}
.loader:before {
  left: -1.5em;
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s;
}
.loader:after {
  left: 1.5em;
}
@-webkit-keyframes load1 {
  0%,
  80%,
  100% {
    box-shadow: 0 0;
    height: 4em;
  }
  40% {
    box-shadow: 0 -2em;
    height: 5em;
  }
}
@keyframes load1 {
  0%,
  80%,
  100% {
    box-shadow: 0 0;
    height: 4em;
  }
  40% {
    box-shadow: 0 -2em;
    height: 5em;
  }
}

.line{
  width: 100%;
  height: 2px;
}
